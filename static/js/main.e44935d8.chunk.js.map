{"version":3,"sources":["simulation.js","components/components.js","App.js","serviceWorker.js","index.js"],"names":["wReturnArr","data","alloc","period","equity_delta","Decimal","end_equity","beg_equity","div","bond_delta","end_bond","beg_bond","return_arrs","equity","bond","range","Math","min","length","bond_returns","equity_returns","i","random","floor","push","rand","map","j","equity_alloc","plus","times","bond_alloc","equity_return","bond_return","outcome","returns","cashflows","Error","asset_levels","reduce","acc","curr","idx","earnings","add","post_mkt_return","next","max","simRunner","state","Promise","resolve","savings","time_to_ret","contrib","dist","infl","arguments","undefined","Array","fill","breakpoint","inf_factor","pow","flow","years_to_ret","duration","contribution","ret_income","inflation","iterations","parseInt","simRunsNum","results","asset_data","JSON","parse","window","localStorage","getItem","allocation","sort","arr1","arr2","survival","scenarios","zeros_count","fail_rate","minus","toString","maxDrawdown","values","MMD","peak","Infinity","DD","greaterThan","toDecimalPlaces","Field","props","react_default","a","createElement","id","className","htmlFor","name","title","cleave_js_react_default","value","options","numeral","numeralThousandsGroupStyle","onChange","Results","_React$Component","SimulationResults","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","inherits","createClass","key","setTimeout","document","querySelector","scrollIntoView","behavior","outcomes","Fragment","components_Chart","runs","concat","StatTable","Component","Chart","chart_x_axis","from","v","k","x","y","median","type","buttom25","top25","createPlotlyComponent","Plotly","config","displaylogo","displayModeBar","scrollZoom","layout","text","legend","orientation","autosize","margin","r","l","t","b","useResizeHandler","style","width","height","overflow","set","rounding","scope","Intl","NumberFormat","format","buttom10","round","top10","Spinner","_React$Component2","SpinnerButton","apply","handler","disabled","Form","onSubmit","handleSubmit","handleAllocChange","handleSelectChange","loading","handleSim","Data","bind","assertThisInitialized","handleChange","handleSimNumChange","loaded","fetch","then","res","ok","json","equity_data","bond_data","forEach","index_name","mo_return","setItem","stringify","catch","error","console","log","getElementById","innerHTML","_this2","setState","e","preventDefault","target","field","rawValue","new_value","Number","isNaN","defineProperty","href","App","App_Data","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e44935d8.chunk.js","sourcesContent":["import { Decimal } from 'decimal.js';\n\nconst rand = function pickRandom(data, period){\n    /**\n     * takes historical data and returns randomized pair of returns\n     * @param {Object} - histrocial data\n     * @return {Object} - random returns for each asset class\n     */\n    const equity = data.equity;\n    const bond = data.bond;\n    const range = Math.min(bond.length, equity.length) -1;\n    const bond_returns = [];\n    const equity_returns = [];\n    for (let i = 0; i < period *12; i+= 1){\n        const random = Math.floor(Math.random() * (range + 1));\n        bond_returns.push(bond[bond.length - random -1]);\n        equity_returns.push(equity[equity.length - random -1]);\n    }\n    return { \n        bond: bond_returns, \n        equity: equity_returns,\n    } ;\n}\n\nconst wReturnArr =  function generateWeightedReturnArr(data, alloc, period){\n    /**\n     * Takes random return arrays and inital and ending allocations returns weighted returns\n     * @param {Object} return_arrs - object with return arrays for each asset class\n     * @param {Object} alloc - object with inital and ending allocations\n     * @param {Number} period - number representing the time until retirment\n     * @returns {Array} - weighted return array\n     */\n    const equity_delta = Decimal(alloc.end_equity - alloc.beg_equity).div(period -1);\n    const bond_delta = Decimal(alloc.end_bond - alloc.beg_bond).div(period -1);\n    const return_arrs = rand(data, period)\n    return return_arrs.equity.map( (i,j) =>{\n        const equity_alloc = j< period \n            ? Decimal( alloc.beg_equity).plus(equity_delta.times(j))\n            : Decimal(alloc.end_equity);        \n        const bond_alloc = j< period \n            ? Decimal(alloc.beg_bond).plus(bond_delta.times(j))\n            : Decimal(alloc.end_bond);  \n        const equity_return = Decimal(return_arrs.equity[j]).div(100)\n            .times(equity_alloc);\n        const bond_return = Decimal(return_arrs.bond[j]).div(100)\n            .times(bond_alloc);\n        return equity_return.plus(bond_return)\n    })\n}\n\nconst flow = function generateCashFlows (savings, time_to_ret, period, contrib, dist, infl=0){\n    /**\n    * Takes inital savings, \n    * @param {string} savings - inital savings\n    * @param {string} time_to_ret - years making contributions before taking distributions\n    * @param {string} period - number of years to perform simulation over\n    * @param {string} contrib - monthly contribution over time_to_ret starting at the end of the first month\n    * @param {string} dist - annual distribution after time_to_ret\n    * @param {string} infl - annual inflation rate\n    * @return {Array} - listing of monthly cashflows during simulation period\n    */\n   const cashflows = Array(period * 12 +1).fill(0);\n   const breakpoint = time_to_ret * 12;\n   const inf_factor = (Decimal(1).plus(Decimal(infl).div(100))).pow(Decimal(1/12));\n   return cashflows.map( (i, j) => {\n       if (j === 0){\n           return savings;\n       }else if (j <= breakpoint){\n           return Decimal(contrib).times(inf_factor.pow(j));\n       }else{\n           return Decimal(dist).div('-12').times(inf_factor.pow(j));\n       }\n   } )\n}\n\nconst outcome = function calcOutcome (returns, cashflows ){\n    /**\n     * Takes cashflows and returns and returns future cash levels\n     * @param {Array} returns - returns over the period\n     * @param {Array} cashflows - cashflows at the end of each month\n     * @return {Array} - value of assets at each point during the period\n     */\n    if (returns.length +1 !== cashflows.length){\n        throw new Error('Invalid input - cashflows must equal the length of returns')\n    }\n    const asset_levels = [Decimal(cashflows[0])];\n    cashflows.reduce((acc, curr, idx) => {\n        const earnings = Decimal('1').add(returns[idx -1]);\n        const post_mkt_return = Decimal(acc).times(earnings);\n        const next = Decimal.max( post_mkt_return.plus(curr), 0);\n        asset_levels.push(next);\n        return next;\n    })\n    return asset_levels;\n}\n\nconst simRunner = function runSimulation(state){\n    return new Promise((resolve)=>{\n        const cashflows = flow(state.savings, state.years_to_ret, state.duration,\n            state.contribution, state.ret_income, state.inflation);\n        const iterations = parseInt(state.simRunsNum);\n        const results = [];\n        const asset_data = JSON.parse(window.localStorage.getItem('asset_data'));\n        for (let i = 0; i < iterations; i += 1){\n            const returns =  wReturnArr(asset_data, state.allocation, state.duration);\n            results.push(outcome(returns, cashflows ));\n        }\n        resolve(results.sort((arr1, arr2)=>arr1[arr1.length -1] - arr2[arr2.length-1]))\n    })\n}\n\nconst survival = function calcSurvivalRate(scenarios){\n    const zeros_count = scenarios.reduce((acc, curr)=>{\n        const is_zero = parseInt(curr[curr.length-1]) === 0 ? 1 : 0;\n        return acc + is_zero\n    },0);\n    const fail_rate = Decimal(zeros_count).div(scenarios.length /100);\n    return Decimal(100).minus(fail_rate).toString();\n}\n\nconst maxDrawdown = function calcMaxDrawdown(values){\n  let MMD = Decimal(0);\n  let peak = Decimal(-Infinity);\n  for (let i = 0; i < values.length; i += 1){\n    peak = values[i].greaterThan(peak) ? values[i] : peak;\n    const step1 = peak.minus(values[i]);\n    const step2 = step1.div(peak);\n    const DD = step2.times(100);\n    MMD = DD.greaterThan(MMD) ? DD : MMD;\n  }\n  return MMD.toDecimalPlaces(2).toString();\n}\n\nexport {rand, wReturnArr, flow, outcome, simRunner, survival, maxDrawdown};","/* global Plotly:true */\n\nimport React from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { Decimal } from 'decimal.js';\nimport { maxDrawdown } from '../simulation';\nimport Cleave from 'cleave.js/react';\n\n\nconst Field = function FieldArea(props){\n    return(\n      <div id='form-group row'> \n        <label className='' htmlFor={props.name} >\n          <h5>{props.title} </h5>\n        </label>\n        <Cleave value={props.value} name={props.name}\n                id={props.name} className='form-control'\n                options={{numeral: true,\n                numeralThousandsGroupStyle: 'thousand'}}\n                onChange={props.onChange}/>\n      </div>  \n    );\n};\n\nconst Results = class SimulationResults extends React.Component{\n  constructor(props){\n    super(props);\n    this.myRef = React.createRef();\n  }\n  componentDidMount(){\n    setTimeout(()=>{\n      const chart_top = document.querySelector('.js-plotly-plot');\n      chart_top.scrollIntoView({behavior: \"smooth\"});\n    },10)\n  }\n\n  render(){\n    const outcomes = this.props.outcomes\n    return(\n      <React.Fragment>\n        <Chart data={this.props.data} duration={this.props.duration}/>\n        <h6> In {outcomes.runs} simulations, the Portfolio survived \n          in {`${Math.floor(outcomes.survival * outcomes.runs/100)}`} {`(${outcomes.survival}%)`} of cases </h6>\n        <StatTable data={this.props.data} />\n      </React.Fragment>\n    )\n  }\n}\n\nconst Chart = function Chart(props) {\n  const chart_x_axis = Array.from({length: props.duration * 12 +1},(v,k)=>k/12);\n  const data = [{\n    x: chart_x_axis,\n    y: props.data.median.map( i => parseInt(i.toString())),\n    type: 'scatter',\n    name: '50th Percentile',\n  },\n  {\n    x: chart_x_axis,\n    y: props.data.buttom25.map( i => parseInt(i.toString())),\n    type: 'scatter',\n    name: '25th Percentile'\n  },\n  {\n    x: chart_x_axis,\n    y: props.data.top25.map( i => parseInt(i.toString())),\n    type: 'scatter',\n    name: '75th Percentile'\n  },]\n  return (\n      React.createElement(createPlotlyComponent(Plotly),{\n          data: data,\n          config: { \n            displaylogo: false, \n            displayModeBar: false,\n            scrollZoom: false,\n          },\n          layout: {\n            title:{ text: 'Simulated Portfolio Balances' },\n            legend: { orientation: \"h\" },\n            autosize: true,\n            margin:{ r: 30, l: 40, t: 80, b: 40 },\n          },\n          useResizeHandler: true,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            overflow: \"auto\",\n          },\n      })\n  )   \n}\n\nconst StatTable = function SummaryStatTable(props){\n  const length = props.data.median.length;\n  Decimal.set({rounding:0})\n  return(\n    <div className='table-responsive'>\n      <table className=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">10th Percentile\t</th>\n            <th scope=\"col\">25th Percentile\t</th>\n            <th scope=\"col\">50th Percentile\t</th>\n            <th scope=\"col\">75th Percentile\t</th>\n            <th scope=\"col\">90th Percentile\t</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">Ending Balance</th>\n            <td>{ Intl.NumberFormat().format(props.data.buttom10[length -1].round())  } </td>\n            <td>{ Intl.NumberFormat().format(props.data.buttom25[length -1].round())  } </td>\n            <td>{ Intl.NumberFormat().format(props.data.median[length -1].round())  } </td>\n            <td>{ Intl.NumberFormat().format(props.data.top25[length -1].round())  } </td>\n            <td>{ Intl.NumberFormat().format(props.data.top10[length -1].round())  } </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Maximum Drawdown</th>\n            <td>{ `-${maxDrawdown(props.data.buttom10)}%` } </td>\n            <td>{ `-${maxDrawdown(props.data.buttom25)}%` } </td>\n            <td>{ `-${maxDrawdown(props.data.median)}%` }</td>\n            <td>{ `-${maxDrawdown(props.data.top25)}%` } </td>\n            <td>{ `-${maxDrawdown(props.data.top10)}%` } </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\n\nconst Spinner = class SpinnerButton extends React.Component{\n    componentDidMount(){\n        //TODO: need to fix this code - works in chrome, but not other browsers\n        setTimeout(this.props.handler,50)\n    }\n\n    render(){\n        const classes = `fas fa-spinner`;\n        return (\n            <button type='submit' id='submit-btm' className='btn btn-primary' disabled>\n              <i className={classes}></i> Simulating\n            </button>\n        )\n    }\n}\n\nconst Form = function InputForm(props) {\n  return(\n      <form className='form-horizontal' onSubmit={props.handleSubmit}>  \n        <Field name='years_to_ret' value={props.state.years_to_ret} \n          onChange={props.handler} title='Years to Retirement' />\n        \n        <Field name='duration' value={props.state.duration} \n        onChange={props.handler} title='Duration of Simulation' />\n        \n        <Field name='savings' value={(props.state.savings)} \n        onChange={props.handler} title='Current Savings' />\n\n        <Field name='contribution' value={props.state.contribution}\n        onChange={props.handler} title='Monthly Contribution until Retirement' />\n\n        <Field name='ret_income' value={props.state.ret_income} \n        onChange={props.handler} title='Target Annual Retirement Income' />\n\n        <Field name='beg_equity' value={props.state.allocation.beg_equity}\n        onChange={props.handleAllocChange} title='Current Equity Allocation (%)' />\n\n        <Field name='beg_bond' value={props.state.allocation.beg_bond}\n        onChange={props.handleAllocChange} title='Current Fixed Income Allocation (%)' />\n        \n        <Field name='end_equity' value={props.state.allocation.end_equity}\n        onChange={props.handleAllocChange} title='Final Equity Allocation (%)' />\n\n        <Field name='end_bond' value={props.state.allocation.end_bond}\n        onChange={props.handleAllocChange} title='Final Fixed Income Allocation (%)' />\n\n        <Field name='inflation' value={props.state.inflation} onChange={props.handler}\n        title='Assumed inflation (%)'></Field>\n\n        <div id='form-group row'> \n          <label className='' htmlFor='num-sim' >\n            <h5>Number of Simulation Iterations: </h5>\n          </label>\n          <select className=\"form-control\" onChange={props.handleSelectChange} value={props.state.simRunsNum}>\n            <option value='100'>100</option>\n            <option value='500'>500</option>\n            <option value='1000'>1,000</option>\n            <option value='2500'>2,500</option>\n            <option value='5000'>5,000</option>\n          </select>\n        </div>  \n\n        <div id='logger'></div>\n        {props.state.loading\n        ? <Spinner data={props.state} handler={props.handleSim} /> \n        : <button type='submit' id='submit-btn' \n          className='btn btn-primary'>Simulate!</button>}        \n      </form>\n  )\n}\n\nexport { Field, Results, Spinner, Form } ","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { simRunner, survival } from './simulation';\nimport { Form, Results } from './components/components.js';\n\nclass Data extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAllocChange = this.handleAllocChange.bind(this);\n    this.handleSim = this.handleSim.bind(this);\n    this.handleSimNumChange = this.handleSimNumChange.bind(this);\n    this.state = {\n      loaded: false,\n      loading: false,\n      years_to_ret: '30',\n      duration: '45',\n      savings: '100000',\n      contribution: '1200',\n      ret_income: '100000',\n      allocation: {\n        beg_equity: '75',\n        beg_bond: '25',\n        end_equity: '20',\n        end_bond: '80'\n      },\n      simRunsNum: '1000',\n      inflation: '1.8',\n      outcomes: {},\n    };\n  };\n\n  componentDidMount(){\n    if (window.localStorage.getItem('asset_data')){\n      if (window.localStorage.getItem('asset_data').length > 500){\n        return\n      }\n    }\n    fetch('https://calc-project.herokuapp.com/api/index/')\n    .then((res) => {\n      if (!res.ok){\n        throw new Error('Network response was not ok.');\n      }\n      return res.json()\n    })\n    .then((data) => {\n      const equity_data = [];\n      const bond_data = [];\n      data.forEach((i) => {\n        if (i.index_name === 'SPX'){\n          equity_data.push(i.mo_return);\n        }else{\n          bond_data.push(i.mo_return);\n        }\n      })\n      if (bond_data.length < 1 || equity_data.length <1){\n        throw new Error('API call returned no data')\n      }\n      const asset_data = {\n        bond: bond_data,\n        equity: equity_data,\n      }\n      window.localStorage.setItem('asset_data', JSON.stringify(asset_data));\n  })\n  .catch((error) => {\n    console.log(error);\n    document.getElementById('logger').innerHTML = error;\n  })\n}\n\n  handleSim(){\n    simRunner(this.state)\n    .then((scenarios)=>{\n      this.setState({\n        loaded: true,\n        loading: false,\n        outcomes: { \n          runs: this.state.simRunsNum,\n          median: scenarios[Math.floor(scenarios.length /2)],\n          buttom10:  scenarios[Math.floor(scenarios.length /10)],\n          buttom25:  scenarios[Math.floor(scenarios.length /100 *25)],\n          top25:  scenarios[Math.floor(scenarios.length /100 * 75)],\n          top10:  scenarios[Math.floor(scenarios.length /10 * 9)],\n          survival: survival(scenarios),\n        },\n      })\n    })\n  };\n\nhandleSimNumChange(e){\n  e.preventDefault();\n  this.setState({\n    simRunsNum: e.target.value\n  })\n}\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.setState({\n      loading: true,\n    })\n  }\n\n  handleChange(e){\n    const field = e.target.name;\n    const value = Math.max(e.target.rawValue,0);\n    const new_value = !Number.isNaN(value) ? value : this.state[field]\n    this.setState({[field] : new_value.toString()});\n  }\n\n  handleAllocChange(e){\n    const field = e.target.name;\n    const value = Math.max(e.target.rawValue,0);\n    const alloc = this.state.allocation;\n    alloc[field] = value.toString(); \n    this.setState({allocation : alloc});\n  }\n  \n\n  render(){\n    return (\n      <div className='container-fluid'>\n        <p>A <a href='https://www.investopedia.com/terms/m/montecarlosimulation.asp'> Monte Carlo simulator </a> to project your future financial position, given your individual parameters and historical market performance. This simulation supports dynamic changes to asset allocation throughout the simulation period. </p>\n        <p>This project is for illustrative purposes only. This tool should not be used for financial or investment advice. This tool has not been subject to rigorous testing and may contain errors.</p>\n        <Form handleSubmit={this.handleSubmit} handler={this.handleChange} \n            state={this.state} handleAllocChange={this.handleAllocChange}\n            handleSim={this.handleSim}  handleSelectChange={this.handleSimNumChange}/>\n\n        {this.state.loaded && <Results title={this.state.outcomes.survival} \n          data={this.state.outcomes} duration={this.state.duration} \n          outcomes={this.state.outcomes} />}\n\n      </div>      \n    )\n  }\n}\n\nfunction App(){\n  return (\n    <div className='container'>\n      <Data/>\n    </div>\n  )\n}\n\nexport default App ;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}